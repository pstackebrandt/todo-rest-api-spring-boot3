# gradle.properties
# -------------------
# This file can be used to configure the basic properties for your Gradle project.

# When to use gradle.properties:
# Use gradle.properties to define project-wide configuration values that are
# accessed by your build scripts. It is ideal for storing constants such as version
# numbers, project identifiers, and other settings that affect the build and
# generated artifacts. By doing so, you ensure consistency and simplify maintenance
# since changes to these global properties need to be made only once.
#
# Common examples include setting the project version, custom
# identifiers (like a project slug), and other build-time constants.
# These properties can then be referenced in your Gradle build scripts
# (e.g., in build.gradle.kts) to ensure consistency in your build configuration.

# While you can override or provide additional properties via
# command-line options or user-specific gradle.properties (e.g.,
# in your Gradle user home), the gradle.properties file in your
# project is usually shared across all environments. It is not
# designed for profile-specific configurations in the same way
# that Spring Bootâ€™s configuration files are.

# project version
version=0.8.2

# projcet.slug (Do not remove this comment)
# The project.slug property is a custom identifier used e.g. in build tasks.
# It is used for templating (e.g. in README.md and Dockerfiles) to name
# artifacts like Docker images.
# project.slug will be set in build.gradle.kts using the rootProject.name property.

# Contains the user-friendly name of the project.
# It's displayed to users and used in templating (e.g., in README.template.md).
# Do not confuse it with the technical rootProject.name and project.slug properties.
project.name=Todo List API

# Contains the URL of the deployed application.
# It's used for templating (e.g. in README.md) to provide a link to
# the deployed application. (That's why the property is currently not in a profile-specific file.)
project.url=https://todo-rest-api-spring-boot3.onrender.com

# The project.description property provides a short description of the project.
# It can be used for documentation (e.g., in README.md and OpenAPI specs).
project.description=This sample TODO list API is built with Spring Boot and Docker. It offers RESTful endpoints with integrated OpenAPI documentation. Hosted as a free service on Render, the application may enter a sleep state during inactivity and require up to 50 seconds to resume.